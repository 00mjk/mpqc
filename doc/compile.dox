
/** \page compile Compiling

<ul>
  <li> \ref compiledownload
  <li> \ref compilepre   
  <li> \ref compilepreopt
  <li> \ref compileconf  
  <li> \ref compilecomp
  <li> \ref compilecheck
</ul>

\section compiledownload Obtaining the code

   The latest version of the source code is available from
   <a href="http://www.mpqc.org">http://www.mpqc.org</a>.
   Public stable releases of MPQC have not occured since 2006.
   Therefore it is recommended that the users
   obtain the latest source code directly from the code repository.

\section compilepre Prerequisites

The following programs are necessary to compile even a bare-bones version of MPQC. Most are
available on any modern computer system.

  - Code building is performed by <a href="http://cmake.org/">CMake</a>, version 2.8.8 or higher.

  - Compilers for the C, C++, and FORTRAN languages are needed.  The
    FORTRAN compiler is used to determine the linkage conventions for
    the BLAS libraries. The compilers listed below are
    known to work.  Other ISO C++ compilers should work as well.

      - GCC 4.7 and later, available from <a href="http://gcc.gnu.org">http://gcc.gnu.org</a>.
      - The Intel C/C++ compilers version 12 and later.
      - The C/C++ compiler frontend to LLVM (clang/clang++).

  - The Basic Linear Algebra Subprograms (BLAS) and
    the Linear Algebra Package (LAPACK) 3.0 are required.
    It is preferable to use vendor-provided optimized libraries,
    such as Intel Math Kernel Library (MKL) or Apple's Accelerate
    framework. A reference copy of <a href="http://netlib.org/">netlib.org</a>
    LAPACK+BLAS is included and can be automatically build by cmake.

  - If you modify the scanner source file, then a
    lexical analyzer generator is required to generate code to read
	input files.  The flex program is used for this purpose.

  - If you modify a parser source file, then GNU bison (version 1.24
    or greater) is needed.  This is a parser generator used to
    generate code to read input files.

  - GNU make.

  - perl: This is used to convert template classes to macros, generate
    and check the validation suite etc.

\section compilepreopt "New" Prerequisites

Certain advanced features of MPQC require additional packages.

  -    A Message Passing Interface (MPI) is required to use MPQC in
       parallel on distributed memory machines. A thread-safe version of
       MPQC is recommended.

  -    Libint (version 2.0.3 or higher): This is a machine-generated
       library that can be used for evaluation of certain molecular
       integrals. Explicitly-correlated methods in MPQC require
       Libint. The library is freely available under GNU Public License
       (GPL) from <a
       href="http://libint.valeyev.net">libint.valeyev.net</a>.
       cmake can automatically download and build Libint.

  -    to be continued

\section compileconf Configuration

 You can build MPQC in the source code directory or you can make a
companion target directory which will be used to hold all of the files generated
by the compilation.  You may name this directory anything you want.
Typically, this directory is named to indicate the architecture
(e.g. <tt>mpqc.i686-linux</tt>) and will be referred to as the target
directory below.

 A <tt>configure</tt> script is used to prepare MPQC for compilation.
Release tarballs of MPQC contain a prepared configure script.  Users
checking out code from the MPQC subversion repository must generate a
<tt>configure</tt> script by running <tt>make configure</tt> in the
top-level source directory.

 In the target directory execute the <tt>configure</tt> command which is
located in the source directory.  Use the absolute pathname to the
configure script.  This command should build a hierarchy of target
directories and the necessary makefiles. Do a <tt>configure --help</tt> to
see a list of options.  Options are specified with an equals sign, as in
<tt>configure --prefix=/usr/local</tt>.  Some options, such as all the
<tt>enable</tt> and <tt>disable</tt> options, do not require an argument.
The most useful options to configure include:

<dl>

<dt><tt>--prefix</tt><dd>Specifies the installation directory.  The default
  is <tt>/usr/local/mpqc/</tt><i>version-number</i>

<dt><tt>--debug</tt><dd>Options for debugging will be given to the
  compiler.

<dt><tt>--new-features</tt><dd>Enables compilations of all advanced features of MPQC,
hence most, if not all, prerequisites will be checked and built, if needed.

</dl>

  If you would like to further customize your target directory,
you can edit <tt>src/lib/mpqc_config.h</tt> and <tt>lib/LocalMakefile</tt> to
suit your needs.  The next time you run configure, these files and
all the makefiles will be overwritten.

\section compilecomp Compilation

 Now you are ready to build the libraries and executables.  Do this by
typing <tt>make</tt> in your target directory.  If you are running on a
symmetric multi-processor, you can use GNU make to parallelize the
compilation.  To compile four files at a time, type <tt>make -j4</tt>.

 You can install the executables and data files with <tt>make install</tt>. Starting with
 version 3, this will also install the libraries and header files needed for development.

\section compilecheck Checking the Compilation

See \ref mpqcval for instructions for checking your compilation.

*/
