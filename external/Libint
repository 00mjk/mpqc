# -*- mode: cmake -*-

set(LIBINT "" CACHE STRING "Libint on/off/prefix")
set_property(CACHE LIBINT PROPERTY STRINGS "" "on" "off") 

# default libint action
if ("${LIBINT}" STREQUAL "")
  set(LIBINT "optional")
endif()

if (LIBINT)

  if ("${LIBINT}" OR "${LIBINT}" STREQUAL "optional")
    find_library(LIBINT2_LIBRARY int2)
    find_path(LIBINT2_INCLUDE_DIR libint2/libint2.h)
  else()
    find_library(LIBINT2_LIBRARY int2
                 PATHS ${LIBINT}/lib NO_DEFAULT_PATH)
    find_path(LIBINT2_INCLUDE_DIR libint2/libint2.h
              PATHS ${LIBINT}/include NO_DEFAULT_PATH)
    if (NOT LIBINT2_LIBRARY)
      message(FATAL_ERROR "Could not find libint2 in ${LIBINT}")
    endif()
  endif()

  if (LIBINT2_LIBRARY)
    if (NOT LIBINT2_INCLUDE_DIR)
      message(FATAL_ERROR "Could not find libint2/libint2.h")
    endif()
    set(LIBINT2_FOUND TRUE)
    message(STATUS "Found Libint2:")
    message(STATUS "\tLIBINT2_LIBRARY=${LIBINT2_LIBRARY}")
    message(STATUS "\tLIBINT2_INCLUDE_DIR=${LIBINT2_INCLUDE_DIR}")
  endif()

endif()

if ("${LIBINT}" AND NOT LIBINT2_FOUND)

  set(EXTERNAL_SOURCE_DIR ${PROJECT_SOURCE_DIR}/external)
  set(EXTERNAL_BUILD_DIR ${PROJECT_BINARY_DIR}/external/build)

  include(ExternalProject)

  # set(LIBINT_URL ${EXTERNAL_SOURCE_DIR}/libint.tar.gz)
  # set(LIBINT_URL_HASH MD5=c59ac34c54dfff59aab3f3d19244071d)

  set(LIBINT_URL http://downloads.sourceforge.net/project/libint/libint-for-mpqc/libint-2.0.3-stable.tgz)
  set(LIBINT_URL_HASH MD5=6fe65ec0763a7c353dd66c7f6687edd4)

  if (EXISTS ${EXTERNAL_SOURCE_DIR}/libint.tar.gz)
    set(LIBINT_URL ${EXTERNAL_SOURCE_DIR}/libint.tar.gz)
    set(LIBINT_URL_HASH "")
  endif()

  message(STATUS "Will build Libint from ${LIBINT_URL}")

  ExternalProject_Add(
    libint
    PREFIX ${EXTERNAL_BUILD_DIR}/libint
    URL ${LIBINT_URL}
    URL_HASH ${LIBINT_URL_HASH}
    BUILD_IN_SOURCE 1
    CONFIGURE_COMMAND /bin/bash ./configure
      --prefix=${EXTERNAL_BUILD_DIR}/libint
      CC=${CMAKE_C_COMPILER}
      "CFLAGS=${CMAKE_C_FLAGS}"
      CXX=${CMAKE_CXX_COMPILER}
      "CXXFLAGS=${CMAKE_CXX_FLAGS}"
    BUILD_COMMAND make SHELL=/bin/bash
    INSTALL_COMMAND make install SHELL=/bin/bash
  )

  add_dependencies(External libint)
  include_directories(${EXTERNAL_BUILD_DIR}/libint/include)
  include_directories(${EXTERNAL_BUILD_DIR}/libint/include/libint2)
  set(LIBINT2_LIBRARY ${EXTERNAL_BUILD_DIR}/libint/lib/libint2.a)
  set(HAVE_LIBINT2 TRUE)

endif()

if (LIBINT_LIBRARIES)
  set(LIBRARIES "${LIBINT_LIBRARIES};${LIBRARIES}")
endif()
