set(EXTERNAL_SOURCE_DIR ${PROJECT_SOURCE_DIR}/external)
set(EXTERNAL_BUILD_DIR ${PROJECT_BINARY_DIR}/external/build)

include(ExternalProject)

# BLAS
if(BLAS_LIBRARIES)
  set(LAPACK_LIBRARIES "${BLAS_LIBRARIES}" CACHE STRING "LAPACK_LIBRARIES")
endif()

# this will find BLAS unless BLAS_LIBRARIES set
find_package(LAPACK)

if (BLAS_LIBRARIES)
  MESSAGE(STATUS "* BLAS libraries: ${BLAS_LIBRARIES}")
endif()

# to make sure they are really black, not FALSE
if (NOT BLAS_LIBRARIES)
  set(BLAS_LIBRARIES "")
endif()

# to make sure they are really black, not FALSE
if (NOT LAPACK_LIBRARIES)
  set(LAPACK_LIBRARIES "")
endif()

if (LAPACK_FOUND)
  MESSAGE(STATUS "LAPACK libraries: ${LAPACK_LIBRARIES}")
  MESSAGE(STATUS "LAPACK linker flags: ${LAPACK_LINKER_FLAGS}")
  string(STRIP "${LAPACK_LIBRARIES}" LAPACK_LIBRARIES)
  # IF(NOT "${LAPACK_LIBRARIES}" STREQUAL "")
  #   set(LIBRARIES "${LIBRARIES};${LAPACK_LIBRARIES}")
  # endif()
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${LAPACK_LINKER_FLAGS}")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${LAPACK_LINKER_FLAGS}")
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${LAPACK_LINKER_FLAGS}")
endif()

if (NOT LAPACK_FOUND)

  set(LAPACK_URL http://www.netlib.org/lapack/lapack-3.4.2.tgz)
  set(LAPACK_URL_HASH MD5=61bf1a8a4469d4bdb7604f5897179478)

  if (EXISTS ${EXTERNAL_SOURCE_DIR}/lapack.tar.gz)
     set(LAPACK_URL ${EXTERNAL_SOURCE_DIR}/lapack.tar.gz)
     set(LAPACK_URL_HASH "")
     message(STATUS "Using Lapack archive ${LAPACK_URL}")
  endif()

  ExternalProject_Add(
    lapack
    PREFIX ${EXTERNAL_BUILD_DIR}/lapack
    URL ${LAPACK_URL}
    URL_HASH ${LAPACK_URL_HASH}
    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${EXTERNAL_BUILD_DIR}/lapack
  )

  add_dependencies(External Lapack)
  set(BLAS_LIBRARIES ${EXTERNAL_BUILD_DIR}/lapack/lib/libblas.a)
  set(LAPACK_LIBRARIES ${EXTERNAL_BUILD_DIR}/lapack/lib/liblapack.a)

endif()