#ifndef MPQCCONFIG_H
#define MPQCCONFIG_H

/* Define if the C++ restrict keyword extension exists.  */
#cmakedefine HAVE_CXX_RESTRICT

/* Define if the C++ __restrict__ keyword extension exists.  */
#cmakedefine HAVE_CXX___RESTRICT__

#if defined(HAVE_CXX_RESTRICT)
#define RESTRICT restrict
#elif defined(HAVE_CXX___RESTRICT__)
#define RESTRICT __restrict__
#else
#define RESTRICT
#endif

/* Define if the deprecated attribute exists in C++.  */
#cmakedefine CXX_DEPRECATED

#ifdef CXX_DEPRECATED
#define DEPRECATED __attribute__((deprecated))
#else
#define DEPRECATED
#endif

/* Define if you want to optimize the reference counting code.  */
#cmakedefine REF_OPTIMIZE

/* Define if you have <stdint.h>.  */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Define if you have <sys/stat.h>.  */
#cmakedefine HAVE_SYS_STAT_H

/* Define if you have <sys/types.h>.  */
#cmakedefine HAVE_SYS_TYPES_H

/* Define if you have <pwd.h>.  */
#cmakedefine HAVE_PWD_H

/* Define if you have <termios.h>.  */
#cmakedefine HAVE_TERMIOS_H

/* Define if you have <sys/times.h>.  */
#cmakedefine HAVE_SYS_TIMES_H @HAVE_SYS_TIMES_H@

/* Define if you have <time.h>.  */
#cmakedefine HAVE_TIME_H

/* Define if you have <machine/fpu.h>.  */
#cmakedefine HAVE_MACHINE_FPU_H

/* Define if you have <asm/fpu.h>.  */
#cmakedefine HAVE_ASM_FPU_H

/* Define if you have <sys/resource.h>.  */
#cmakedefine HAVE_SYS_RESOURCE_H @HAVE_SYS_RESOURCE_H@

/* Define if you have the vprintf function.  */
#cmakedefine HAVE_VPRINTF

/* Define if you have the ios::fmtflags.  */
#cmakedefine HAVE_IOS_FMTFLAGS

/* Define if you have the long long type extension.  */
#ifndef HAVE_LONG_LONG
#cmakedefine HAVE_LONG_LONG
#endif

/* Define if you have streambuf::pubseekoff (you should).  */
#cmakedefine HAVE_PUBSEEKOFF

/* Define if you have streambuf::sgetn (you should).  */
#cmakedefine HAVE_SGETN

/* Define if you have a public streambuf::seekoff.  */
#cmakedefine HAVE_SEEKOFF

/* Define as the return type of signal handlers (int or void).  */
#cmakedefine RETSIGTYPE
#ifndef RETSIGTYPE
#define RETSIGTYPE void
#endif

/* Define if signal handlers have an ellipsis argument in C++.  */
#cmakedefine SIGHASELLIP

/* Define if you have the ANSI C header files.  */
#cmakedefine STDC_HEADERS

/* Define if your <sys/time.h> declares struct tm.  */
#cmakedefine TM_IN_SYS_TIME

/* Define if you have the strerror function.  */
#cmakedefine HAVE_STRERROR

/* Define if you have the setenv function.  */
#cmakedefine HAVE_SETENV

/* Define if isnan is available from C++.  */
#ifndef HAVE_ISNAN
#cmakedefine HAVE_ISNAN
#endif

/* Define if you have the sigfillset function (and company).  */
#cmakedefine HAVE_SIGFILLSET

/* Define if you have the signal function.  */
#cmakedefine HAVE_SIGNAL

/* Define if you have the sigaction function.  */
#cmakedefine HAVE_SIGACTION

/* Define if you have the system function.  */
#cmakedefine HAVE_SYSTEM

/* Define if you have the posix_spawn function.  */
#cmakedefine HAVE_POSIX_SPAWN

/* Define if you have the drand48 function.  */
#cmakedefine HAVE_DRAND48

/* Define if you have the fchdir function.  */
#cmakedefine HAVE_FCHDIR

/* Define if you have the getpwuid function.  */
#cmakedefine HAVE_GETPWUID

/* Define if you have the geteuid function.  */
#cmakedefine HAVE_GETEUID

/* Define if you have the gethostname function.  */
#cmakedefine HAVE_GETHOSTNAME

/* Define if you have the time function.  */
#cmakedefine HAVE_TIME

/* Define if you have the ctime function.  */
#cmakedefine HAVE_CTIME

/* Define if you have the C99 <fenv.h>.  */
#cmakedefine HAVE_FENV_H

/* Define if you have the glibc feenableexcept extension.  */
#cmakedefine HAVE_FEENABLEEXCEPT

/* Define if you have the glibc fedisableexcept extension.  */
#cmakedefine HAVE_FEDISABLEEXCEPT

/* Define if you have the setrlimit function.  */
#cmakedefine HAVE_SETRLIMIT

/* Define if you have functioning SYSV IPC.  */
#cmakedefine HAVE_SYSV_IPC

/* Define if semctl must have a semun as the fourth argument.  */
#cmakedefine SEMCTL_REQUIRES_SEMUN

/* Define to the type used for shared memory.  */
/* #cmakedefine SHMTYPE */

#ifndef SHMTYPE
#define SHMTYPE char*
#endif

/* Define if you have the <fcntl.h> header file.  */
#cmakedefine HAVE_FCNTL_H

/* Define if you have the <limits.h> header file.  */
#cmakedefine HAVE_LIMITS_H

/* Define if you have the <sys/ioctl.h> header file.  */
#cmakedefine HAVE_SYS_IOCTL_H

/* Define if you have the <sys/time.h> header file.  */
#cmakedefine HAVE_SYS_TIME_H @HAVE_SYS_TIME_H@

/* Define if you have the <unistd.h> header file.  */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define if you have the <pthread.h> header file and the pthread library.  */
#cmakedefine HAVE_PTHREAD @HAVE_PTHREAD@

/* Define if you can have the pthread_attr_setstacksize function.  */
#cmakedefine HAVE_PTHREAD_ATTR_SETSTACKSIZE

/* Define if you can have the pthread_attr_getstacksize function.  */
#cmakedefine HAVE_PTHREAD_ATTR_GETSTACKSIZE

/* Define if you can have the pthread_attr_getscope function.  */
#cmakedefine HAVE_PTHREAD_ATTR_GETSCOPE

/* Define if you can have the pthread_attr_setscope function.  */
#cmakedefine HAVE_PTHREAD_ATTR_SETSCOPE

/* Define if you can have the pthread_attr_getinheritsched function.  */
#cmakedefine HAVE_PTHREAD_ATTR_GETINHERITSCHED

/* Define if you can have the pthread_attr_setinheritsched function.  */
#cmakedefine HAVE_PTHREAD_ATTR_SETINHERITSCHED

/* Define if you can have the pthread_attr_setschedpolicy function.  */
#cmakedefine HAVE_PTHREAD_ATTR_SETSCHEDPOLICY

/* Define if you can have the pthread_attr_getschedpolicy function.  */
#cmakedefine HAVE_PTHREAD_ATTR_GETSCHEDPOLICY

/* Define if you can have the pthread_attr_setschedparam function.  */
#cmakedefine HAVE_PTHREAD_ATTR_SETSCHEDPARAM

/* Define if you can have the pthread_attr_getschedparam function.  */
#cmakedefine HAVE_PTHREAD_ATTR_GETSCHEDPARAM

/* Define if you can have the sched_get_priority_max function.  */
#cmakedefine HAVE_SCHED_GET_PRIORITY_MAX

/* Define if you can have the sched_get_priority_min function.  */
#cmakedefine HAVE_SCHED_GET_PRIORITY_MIN

/* Define if you have the NIAMA library.  */
#cmakedefine HAVE_NIAMA

/* Define if you have the <mpi.h> header file and library.  */
#cmakedefine HAVE_MPI

/* Define if you have the MPI_Init_thread routine.  */
#define HAVE_MPI_INIT_THREAD // Are there even any MPI's without it?

/* Set to the MPI macro defined the desired threading support level.  */
#define MPQC_MPI_THREAD_LEVEL MPI_THREAD_MULTIPLE // assume we want that always

/* Define if you have the <armci.h> header file and library.  */
#cmakedefine HAVE_ARMCI

#if (defined HAVE_MPI) && (defined HAVE_ARMCI)
#define MPQC_PARALLEL
#endif

/* Define if you have the libint2 header file and library.  */
#cmakedefine HAVE_LIBINT2

/* Define what is the normalization convention of IntegralLibint2, 1(cca) or 2(exact).  */
#cmakedefine INTEGRALLIBINT2_NORMCONV @INTEGRALLIBINT2_NORMCONV@
#define INTEGRALLIBINT2_NORMCONV_CCA 1
#define INTEGRALLIBINT2_NORMCONV_EXACT 2

/* Define if MADNESS is available.  */
#cmakedefine HAVE_MADNESS

/* Define if TiledArray is available.  */
#cmakedefine HAVE_TILEDARRAY

/* Define if Psi-MPQC interface can be compiled.  */
#cmakedefine HAVE_PSI3

/* The location of Psi3 root directory. */
#cmakedefine PSI3ROOTDIR "@PSI3ROOTDIR@"

/* Define if your MPI implementation has MPI-IO functions */
#cmakedefine HAVE_MPIIO

/* Define if you have the <perf.h> header file and library.  */
#cmakedefine HAVE_PERF

/* Define if you have <libunwind.h> and unw_init_local.  */
#cmakedefine HAVE_LIBUNWIND

/* Define if you have <execinfo.h> backtrace and backtrace_symbol.  */
#cmakedefine HAVE_BACKTRACE

/* Define if you have abi::__cxa_demangle.  */
#cmakedefine HAVE_CXA_DEMANGLE

/* Define if MPIMessageGrp should be used by default. */
#cmakedefine DEFAULT_MPI

/* Define if MTMPIMemoryGrp should be used by default. */
#cmakedefine DEFAULT_MTMPI

/* Define if ARMCIMemoryGrp should be used by default. */
#cmakedefine DEFAULT_ARMCI

/* Define if is MPI is always used (needed if MPI_Init is used to
   initialize argument list). */
#cmakedefine ALWAYS_USE_MPI

/* Define if you have the m library (-lm).  */
#cmakedefine HAVE_LIBM

/* Define if you have the sun library (-lsun).  */
#cmakedefine HAVE_LIBSUN

/* Define if you have the fl library (-lfl).  */
#cmakedefine HAVE_LIBFL

/* Define if you have the dl library (-ldl).  */
#cmakedefine HAVE_LIBDL

/* Define if you have the <dlfcn.h> header file.  */
#cmakedefine HAVE_DLFCN_H @HAVE_DLFCN_H@

/* Defines the sizeof(int64_t) */
#cmakedefine C_TYPE_INT64_T @C_TYPE_INT64_T@

/* Defines the sizeof(int32_t) */
#cmakedefine C_TYPE_INT32_T @C_TYPE_INT32_T@

/* Defines the sizeof(long) */
#cmakedefine C_TYPE_LONG @C_TYPE_LONG@

/* Defines the sizeof(int) */
#cmakedefine C_TYPE_INT @C_TYPE_INT@

/* Determines the width of the integer use by BLAS F77 interface */
#cmakedefine F77_INTEGER_WIDTH @F77_INTEGER_WIDTH@

#cmakedefine HAVE_BLAS

/* Define if you have the Scalable BLAS package and everything needed for it.
 */
#cmakedefine HAVE_SCALABLE_BLAS

/* Define if machine byte order is big endian. */
#cmakedefine WORDS_BIGENDIAN

#cmakedefine HAVE_PYTHON

/* The host architecture. */
#cmakedefine HOST_ARCH

/* The target architecture. */
#cmakedefine TARGET_ARCH "@TARGET_ARCH@"

/* The version number. */
#define MPQC_VERSION "@MPQC_VERSION@"

/* The major version number. */
#define MPQC_MAJOR_VERSION @MPQC_MAJOR_VERSION@

/* The minor version number. */
#define MPQC_MINOR_VERSION @MPQC_MINOR_VERSION@

/* The micro version number. */
#define MPQC_MICRO_VERSION @MPQC_MICRO_VERSION@

/* The buildid. */
#define MPQC_BUILDID "@MPQC_BUILDID@"

/* The library directory in the src distribution. */
#define SRC_MPQC_DATA_PATH "@SRC_MPQC_DATA_PATH@"

/* The installed location of the library directory. */
#define INSTALLED_MPQC_DATA_PATH "@INSTALLED_MPQC_DATA_PATH@"

/* The location of architecture independent files. */
#define MPQCDATAPATH "@MPQCDATAPATH@"

/* The default memory allocation, in bytes. */
#cmakedefine DEFAULT_MPQC_MEMORY @DEFAULT_MPQC_MEMORY@
#ifndef DEFAULT_MPQC_MEMORY
#define DEFAULT_MPQC_MEMORY 536870912
#endif

/* Define if template should be explicitly instantiated.  */
#cmakedefine EXPLICIT_TEMPLATE_INSTANTIATION

/* define if array has fill member function. */
#cmakedefine SC_ARRAY_HAS_FILL

/* define if std::array is available. */
#cmakedefine HAVE_STD_ARRAY

/* define if std::make_shared and std::allocate_shared are available. */
#cmakedefine SC_HAS_STD_MAKE_SHARED

/* define if std::shared_ptr is available. */
#cmakedefine SC_HAS_STD_SHARED_PTR

/* define if std::tr1::array is available. */
#cmakedefine SC_HAS_STD_TR1_ARRAY

/* define if std::tr1::shared_ptr is available. */
#cmakedefine SC_HAS_STD_TR1_SHARED_PTR

/* define if std::tr1 type traits are available. */
#cmakedefine SC_HAS_STD_TR1_TYPE_TRAITS

/* define if std type traits are available. */
#cmakedefine SC_HAS_STD_TYPE_TRAITS

/* define if SC is using <array>. */
#cmakedefine SC_USE_ARRAY

/* define if SC is using <boost/tr1/array.hpp>. */
#cmakedefine SC_USE_BOOST_TR1_ARRAY_HPP

/* define if SC is using <boost/tr1/memory.hpp>. */
#cmakedefine SC_USE_BOOST_TR1_MEMORY_HPP

/* define if SC is using <boost/tr1/type_traits.hpp>. */
#cmakedefine SC_USE_BOOST_TR1_TYPE_TRAITS_HPP

/* define if SC is using <memory>. */
#cmakedefine SC_USE_MEMORY

/* define if SC is using <tr1/array>. */
#cmakedefine SC_USE_TR1_ARRAY

/* define if SC is using <tr1/memory>. */
#cmakedefine SC_USE_TR1_MEMORY

/* define if SC is using <tr1/type_traits>. */
#cmakedefine SC_USE_TR1_TYPE_TRAITS

/* define if SC is using <type_traits>. */
#cmakedefine SC_USE_TYPE_TRAITS

/* Define if "new" MPQC3 feature set is supported.  */
#if defined(HAVE_TILEDARRAY) && defined(HAVE_LIBINT2)
#  define HAVE_MPQC3_RUNTIME
#endif

#cmakedefine HAVE_PAPI

#endif /* MPQCCONFIG_H */

/* 
 * Local Variables:
 * mode: c++
 * End:
 */
