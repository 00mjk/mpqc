
mcholstep<MCholeskyNewtonStep>: ()

nlp:(
  quad1<Quadratic>: (
    initialx = [ 0.0 0.0 ]
    x0 = [ 1.0 1.0 ]
    g0 = [ 0.0 0.0 ]
    h0 = [ [ 2.0 0.0 ]
           [ 0.0 2.0 ] ]
    )
  quad2<Quadratic>: (
    initialx = [ 0.0 0.0 ]
    x0 = [ 1.0 1.0 ]
    g0 = [ 0.0 0.0 ]
    h0 = [ [ 2.0 1.0 ]
           [ 1.0 2.0 ] ]
    )
  quad3a<Quadratic>: (
    initialx = [ 0.0 0.0 0.0 0.0 ]
    x0 = [ 1.0 1.0 3.0 -3.0 ]
    g0 = [ 0.0 0.0 0.0  0.0 ]
    h0 = [ [  2.0  1.0 -1.0  0.5 ]
           [  1.0  2.0  0.5  1.0 ]
           [  1.0  0.0  8.0  1.0 ]
           [  1.0  0.0  0.5  6.0 ]
         ]
    )
  % same as quad3
  quad3b<Quadratic>: (
    initialx = [ 0.0 0.0 0.0 0.0 ]
    x0 = [ 1.0 1.0 3.0 -3.0 ]
    g0 = [ 0.0 0.0 0.0  0.0 ]
    h0 = [ [  2.0  1.0 -1.0  0.5 ]
           [  1.0  2.0  0.5  1.0 ]
           [  1.0  0.0  8.0  1.0 ]
           [  1.0  0.0  0.5  6.0 ]
         ]
    )
  % same as quad3
  quad3c<Quadratic>: (
    initialx = [ 0.0 0.0 0.0 0.0 ]
    x0 = [ 1.0 1.0 3.0 -3.0 ]
    g0 = [ 0.0 0.0 0.0  0.0 ]
    h0 = [ [  2.0  1.0 -1.0  0.5 ]
           [  1.0  2.0  0.5  1.0 ]
           [  1.0  0.0  8.0  1.0 ]
           [  1.0  0.0  0.5  6.0 ]
         ]
    )
  )

tols<TOLS>: ()

opt: [
  <OptCG>: (
      nlp = $:nlp:quad1
      tols = $:tols
    )
  <OptCG>: (
      nlp = $:nlp:quad2
      tols = $:tols
    )
  <OptCG>: (
      nlp = $:nlp:quad3a
      tols = $:tols
    )
  <OptNewton>: (
      step = $:mcholstep
      nlp = $:nlp:quad3b
      tols = $:tols
    )
  <OptQNewton>: (
      step = $:mcholstep
      nlp = $:nlp:quad3c
      tols = $:tols
      update<BFGSupdate>: (
      %update<NoUpdate>: (
        guess = [ [  2.0  1.0 -1.0  0.5 ]
           [  1.0  2.0  0.5  1.0 ]
           [  1.0  0.0  8.0  1.0 ]
           [  1.0  0.0  0.5  6.0 ]
         ]
        )
    )
  ]
