// 
// File:          MPQC_ComponentClassDescription_Impl.hxx
// Symbol:        MPQC.ComponentClassDescription-v0.2
// Symbol Type:   class
// Description:   Server-side implementation for MPQC.ComponentClassDescription
// 
// WARNING: Automatically generated; only changes within splicers preserved
// 
// 

#ifndef included_MPQC_ComponentClassDescription_Impl_hxx
#define included_MPQC_ComponentClassDescription_Impl_hxx

#ifndef included_sidl_cxx_hxx
#include "sidl_cxx.hxx"
#endif
#ifndef included_MPQC_ComponentClassDescription_IOR_h
#include "MPQC_ComponentClassDescription_IOR.h"
#endif
#ifndef included_MPQC_ComponentClassDescription_hxx
#include "MPQC_ComponentClassDescription.hxx"
#endif
#ifndef included_gov_cca_CCAException_hxx
#include "gov_cca_CCAException.hxx"
#endif
#ifndef included_gov_cca_ComponentClassDescription_hxx
#include "gov_cca_ComponentClassDescription.hxx"
#endif
#ifndef included_sidl_BaseClass_hxx
#include "sidl_BaseClass.hxx"
#endif
#ifndef included_sidl_BaseInterface_hxx
#include "sidl_BaseInterface.hxx"
#endif
#ifndef included_sidl_ClassInfo_hxx
#include "sidl_ClassInfo.hxx"
#endif
#ifndef included_sidl_RuntimeException_hxx
#include "sidl_RuntimeException.hxx"
#endif


// DO-NOT-DELETE splicer.begin(MPQC.ComponentClassDescription._includes)
// Put additional includes or other arbitrary code here...
// DO-NOT-DELETE splicer.end(MPQC.ComponentClassDescription._includes)

namespace MPQC { 

  /**
   * Symbol "MPQC.ComponentClassDescription" (version 0.2)
   */
  class ComponentClassDescription_impl : public virtual 
    ::MPQC::ComponentClassDescription 
  // DO-NOT-DELETE splicer.begin(MPQC.ComponentClassDescription._inherits)

  /** ComponentClassDescription implements a CCA standard component 
      interface for class desciptions.  This class is used to 
      inform the ComponentFactory of available components in a 
      statically linked executable.

      This is an implementation of a SIDL interface.
      The stub code is generated by the Babel tool.  Do not make
      modifications outside of splicer blocks, as these will be lost.
      This is a server implementation for a Babel class, the Babel
      client code is provided by the cca-spec-babel package.
   */

  // DO-NOT-DELETE splicer.end(MPQC.ComponentClassDescription._inherits)
  {

  // All data marked protected will be accessable by 
  // descendant Impl classes
  protected:

    bool _wrapped;

    // DO-NOT-DELETE splicer.begin(MPQC.ComponentClassDescription._implementation)
    std::string cName;
    std::string cAlias;
    // DO-NOT-DELETE splicer.end(MPQC.ComponentClassDescription._implementation)

  public:
    // default constructor, used for data wrapping(required)
    ComponentClassDescription_impl();
    // sidl constructor (required)
    // Note: alternate Skel constructor doesn't call addref()
    // (fixes bug #275)
    ComponentClassDescription_impl( struct 
      MPQC_ComponentClassDescription__object * s ) : StubBase(s,true), _wrapped(
      false) { _ctor(); }

    // user defined construction
    void _ctor();

    // virtual destructor (required)
    virtual ~ComponentClassDescription_impl() { _dtor(); }

    // user defined destruction
    void _dtor();

    // true if this object was created by a user newing the impl
    inline bool _isWrapped() {return _wrapped;}

    // static class initializer
    static void _load();

  public:

    /**
     * user defined non-static method.
     */
    void
    initialize_impl (
      /* in */const ::std::string& className,
      /* in */const ::std::string& classAlias
    )
    ;


    /**
     *  
     * Returns the class name provided in 
     * <code>BuilderService.createInstance()</code>
     * or in
     * <code>AbstractFramework.getServices()</code>.
     * <p>
     * Throws <code>CCAException</code> if <code>ComponentClassDescription</code> is invalid.
     */
    ::std::string
    getComponentClassName_impl() // throws:
    //     ::gov::cca::CCAException
    //     ::sidl::RuntimeException
    ;
  };  // end class ComponentClassDescription_impl

} // end namespace MPQC

// DO-NOT-DELETE splicer.begin(MPQC.ComponentClassDescription._misc)
// Put miscellaneous things here...
// DO-NOT-DELETE splicer.end(MPQC.ComponentClassDescription._misc)

#endif
