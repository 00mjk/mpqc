//
// $Log$
// Revision 1.1  1993/12/29 12:53:04  etseidl
// Initial revision
//
// Revision 1.3  1992/04/17  15:01:29  seidl
// add vector projection stuff
//
// Revision 1.2  1992/03/17  20:38:30  seidl
// fix comments
//
// Revision 1.1.1.1  1992/03/17  17:08:22  seidl
// DOE-NIH Quantum Chemistry Library 0.0
//
// Revision 1.8  1992/01/16  19:51:28  seidl
// add int_store parameter to scf_struct
//
// Revision 1.7  1992/01/09  11:36:30  seidl
// add modules recv0 and send0
//
// Revision 1.6  1991/12/30  18:47:43  seidl
// do not generate zero functions for pkints or the ptrs
//
// Revision 1.5  1991/12/24  11:47:04  seidl
// add assign, iseq, and zzero routines
//
// Revision 1.4  1991/12/20  16:23:41  seidl
// add diis_flg, convergence, maxiter, it_diis, and lvl_shift to scf_struct
//
// Revision 1.3  1991/12/17  21:46:06  seidl
// add default_modules for new sgen
//
//

default_modules(assign iseq free alloc zero bread bwrite print 
       init bcast0 rbcast0 sbcast0 recv0 send0 );

scf_struct (!ip) {
  boolean hsos;           //        hsos: 1 if high-spin open-shell
  boolean singlet;        //     singlet: 1 if open-shell singlet
  boolean special;        //     special: 1 if OPENTYPE=special
  boolean twocon;         //      twocon: 1 if tcscf
  boolean use_symmetry;   //use_symmetry: 1 if symmetry is to be used
  boolean restart;        //     restart: 1 if old scf vector to be used
  boolean diis_flg;       //    diis_flg: 1 if diis is to be used
  boolean proj_guess;

  int convergence;    // convergence: convergence on density matrix
  int maxiter;        //     maxiter: maximum number of iterations in scf
  int n_open;         //      n_open: number of open shells
  int optri;          //       optri: ioff(n_open)
  int expense;        //     expense: determines how expensive an int batch
                      //                has to be to be written to disk
  int intcut;         //      intcut: cutoff for not calculating int batch
  int save_thr;       //    save_thr: int batches for which Q(nm,lk) is larger
                      //              than save_thr are written to disk
  int int_store;      //   int_store: the number of integrals to keep in core
  int ndiis;          //       ndiis: number of error matrices to use with diis
  int it_diis;        //     it_diis: iteration to begin diis extrapolation
  int fock_typ;       //    fock_typ: used to select form of fock_eff 
                      //              for open-shell scf
  double diisdamp;    //    diisdamp: scale factor for diag. elements of bmat
  double lvl_shift;   //   lvl_shift: level shift


  boolean iopen;          //       iopen: 1 if open-shell or tcscf
  boolean readflgc;       //    readflgc: 1 if closed shell part of supermatrix
                          //                is written to binary file
  boolean readflgo;       //    readflgo: 1 if open shell part of supermatrix
                          //                is written to binary file
  boolean converged;      //   converged: 1 if wavefunction is converged

  int nbfso;          //       nbfso: number of basis functions in so basis
  int nbfao;          //       nbfao: number of basis functions in ao basis
  int nbstri;         //      nbstri: size of lower triangle in so basis
  int nbatri;         //      nbatri: size of lower triangle in ao basis
  int nsomax;         //      nsomax: max. # of so's per irrep
  int mxcoef;         //      mxcoef: sum of (# so's per irrep)**2
  int mxcoef2;        //     mxcoef2: sum of ioff[# so's per irrep]
  int lastc;          //       lastc: number of pkints written in last batch
  int lasto;          //       lasto: number of pkints written in last batch
  int num_bufs_c;     //  num_bufs_c: number of buffers written to disk
  int num_bufs_o;     //  num_bufs_o: number of buffers written to disk
  int maxbufc;        //     maxbufc: size of closed shell integral buffer
  int maxbufo;        //     maxbufo: size of closed shell integral buffer
  int opshl1;         //      opshl1: 1st open shell in tcscf or oss
  int opshl2;         //      opshl2: 2nd open shell in tcscf or oss
  int opblk1;         //      opblk1: 1st irrep with open shell in it in 
                      //              tcscf or oss
  int opblk2;         //      opblk2: 2nd irrep with open shell in it in 
                      //              tcscf or oss

  double nuc_rep;     //     nuc_rep: nuclear repulsion energy
  double e_elec;      //      e_elec: electronic energy
  double diis_er;     //     diis_er: maximum element of diis error matrix
  double ci1;         //         ci1: first ci coeff for twocon
  double ci2;         //         ci2: second ci coeff for twocon
  double alpha1;      //      alpha1: used in tcscf
  double alpha2;      //      alpha2: used in tcscf
  double alpha3;      //      alpha3: used in tcscf

  double alpha[optri];
  double beta[optri];
  } ;

scf_pkint_c (!ip !print !bread !bwrite !zero) {
  int ij;
  int kl;
  double pval;
  };

scf_pk_buf_c (!ip !print !bread !bwrite) {
  int maxbufc;
  scf_pkint_c pk[maxbufc];
  };

scf_pkint_o (!ip !print !bread !bwrite !zero) {
  int ij;
  int kl;
  double pval;
  double kval;
  };

scf_pk_buf_o (!ip !print !bread !bwrite) {
  int maxbufo;
  scf_pkint_o pk[maxbufo];
  };

scf_mf_ptrs (!zero) {
  int cur_ptr;
  int centers;
  int scf_struct;
  int sym_struct;
  int irreps;
  int uaoso;
  int usoao;
  int overlap;
  int kinetic;
  int nuclear;
  int hcore;
  int scf_vector;
  int evals;
  int occ_num;
  int pmat;
  int pmato;
  };
