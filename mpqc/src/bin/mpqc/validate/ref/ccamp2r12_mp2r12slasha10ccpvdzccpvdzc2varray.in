% Emacs should use -*- KeyVal -*- mode
% this file was automatically generated
% label: cca integrals mp2-r12 test
% molecule specification
molecule<Molecule>: (
  symmetry = C2V
  unit = angstrom
  { atoms geometry } = {
     O     [     0.000000000000     0.000000000000     0.369372944000 ]
     H     [     0.783975899000     0.000000000000    -0.184686472000 ]
     H     [    -0.783975899000     0.000000000000    -0.184686472000 ]
  }
)
% basis set specification
basis<GaussianBasisSet>: (
  name = "cc-pVDZ"
  molecule = $:molecule
)
% using cca integrals
integrals<IntegralCCA>: (
  integral_buffer = array
  default_subfactory = MPQC.CintsEvaluatorFactory
  molecule = $:molecule
)
mpqc: (
  checkpoint = no
  savestate = no
  restart = no
  integrals = $:integrals
  % molecular coordinates for optimization
  coor<SymmMolecularCoor>: (
    molecule = $:molecule
    generator<IntCoorGen>: (
      molecule = $:molecule
    )
  )
  do_energy = yes
  do_gradient = no
  do_cca = yes
  % method for computing the molecule's energy
  mole<MBPT2_R12>: (
    molecule = $:molecule
    basis = $:basis
    coor = $..:coor
    memory = 32000000
    integrals = $:integrals
    stdapprox = "A"
    nfzc = 1
    reference<CLHF>: (
      molecule = $:molecule
      basis = $:basis
      total_charge = 0
      multiplicity = 1
      memory = 32000000
      guess_wavefunction<CLHF>: (
        molecule = $:molecule
        total_charge = 0
        multiplicity = 1
        basis<GaussianBasisSet>: (
          molecule = $:molecule
          name = "DZ (Dunning)"
        )
        memory = 32000000
      )
    )
  )
  optimize = no
  % optimizer object for the molecular geometry
  opt<QNewtonOpt>: (
    max_iterations = 20
    function = $..:mole
    update<BFGSUpdate>: ()
    convergence<MolEnergyConvergence>: (
      cartesian = yes
      energy = $..:..:mole
    )
  )
)
