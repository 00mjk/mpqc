dnl Process this file with autoconf to produce a configure script.
define([AC_CACHE_LOAD], )dnl for debugging configure.in
define([AC_CACHE_SAVE], )dnl for debugging configure.in
AC_INIT(src/lib/util/ref/ref.h)
AC_CONFIG_HEADER(src/lib/config.h)
AC_CONFIG_AUX_DIR(bin)

AC_CANONICAL_SYSTEM

AC_DEFINE_UNQUOTED(HOST_ARCH, "$host")
AC_DEFINE_UNQUOTED(TARGET_ARCH, "$target")

dnl --------- Features ---------

AC_ARG_ENABLE(debug,
[  --enable-debug          Compile with debugging options],
[
case $enableval in
  yes)
    DEBUG=yes
  ;;
  no)
    DEBUG=no
  ;;
  *)
    AC_MSG_ERROR([Invalid value for --enable-debug ($enableval)])
  ;;
esac
],[
    DEBUG=no
]
)

AC_ARG_ENABLE(ref-debug,
[  --enable-ref-debug      Check for reference count overwrites/overflows/etc],
[
case $enableval in
  yes)
  ;;
  no)
    AC_DEFINE(REF_OPTIMIZE)
  ;;
  *)
    AC_MSG_ERROR([Invalid value for --enable-ref-debug ($enableval)])
  ;;
esac
],[
  if test $DEBUG = no; then
    AC_DEFINE(REF_OPTIMIZE)
  fi
]
)

AC_ARG_ENABLE(shared-libs,
[  --enable-shared-libs    Use shared libraries.],
[
case $enableval in
  yes)
    SHARED_LIBS=yes
  ;;
  no)
    SHARED_LIBS=no
  ;;
  *)
    AC_MSG_ERROR([Invalid value for --enable-shared-libs ($enableval)])
  ;;
esac
],[
SHARED_LIBS=no
]
)

AC_ARG_WITH(cc,
[  --with-cc               Gives the name of the C compiler to use.],
CC=$withval
)

AC_ARG_WITH(cxx,
[  --with-cxx              Gives the name of the C++ compiler to use.],
CXX=$withval
)

AC_ARG_WITH(ranlib,
[  --with-ranlib           Gives the name of the ranlib program.],
CXX=$withval
)

AC_ARG_WITH(ar,
[  --with-ar               Names the archive creator.],
CXX=$withval
)

AC_ARG_WITH(include,
[  --with-include          Specifies include directories (-Idir1 -Idir2).],
EXTRAINCLUDE=$withval
CPPFLAGS=$withval
echo Using extra include directories: $withval
)

AC_ARG_WITH(libs,
[  --with-libs             Specifies library directories (-Ldir1 -Ldir2).],
LIBS=$withval
echo Using extra libraries: $withval
)

dnl --------- Want absolute path for srcdir, not relative. ---------

if test X$ac_srcdir_defaulted = Xyes; then
  srcdir=`(cd $srcdir; echo $PWD)`
fi

dnl --------- Checks for programs. ---------
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_CC
dnl ac_prog_cxx's order isn't what i need
AC_CHECK_PROGS(CXX, g++ c++ gcc CC cxx xlC, gcc)
dnl sees if CXX is a GNU compiler
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_CXXCPP
AC_CHECK_PROG(AR,ar,ar)
AC_CHECK_PROG(PERL,perl,perl)
AC_CHECK_PROG(BISON,bison,bison)
AC_CHECK_PROG(FLEX,flex,flex)
AC_CHECK_PROG(CTANGLE,ctangle,ctangle)
AC_CHECK_PROG(CWEAVE,cweave,cweave)
AC_CHECK_PROG(GENCLASS,genclass,genclass)
AC_CHECK_PROG(SGEN,sgen,sgen,sgen)
AC_CHECK_PROG(TMPL,tmpl,tmpl,tmpl)
AC_CHECK_PROG(LISTLIBS,listlibs,listlibs,listlibs)

dnl --------- This is at the top since its likely to cause problems. ---------

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
CPPFLAGS="-I$srcdir/include -I$srcdir/src/lib $CPPFLAGS"
AC_CHECK_HEADER(FlexLexer.h,,[
AC_MSG_ERROR([couldn't find FlexLexer.h--try --with-include])
])
AC_LANG_RESTORE

dnl -------- Checks for cross compiling. ----------

AC_C_CROSS

if test X$cross_compiling = Xyes -a X$target = X$host; then
  AC_MSG_ERROR([Cross compiling, but target is host (use --host).])
fi

dnl -------- Checks for compiler/linker options. ----------

# options needed only for optimization
COPTIONS_OPT=-O
# options needed only for debugging
COPTIONS_DBG=-g
# options that are always needed
COPTIONS_MISC=

# options needed only for optimization
CXXOPTIONS_OPT=-O
# options needed only for debugging
CXXOPTIONS_DBG=-g
# options that are always needed
CXXOPTIONS_MISC=

OBJSUF=o
LIBSUF=a

LDFLAGS=
SH_LD=ld
SH_LDFLAGS=
ELF=no
ELF_MAJOR=1
ELF_MINOR=0.1

dnl -- does machine use elf format --

changequote(<<, >>)dnl
case $target in
  mips*-sgi-irix[5-6]* | r8000-sgi-irix*)
    ELF=yes
    if test X$GXX = Xyes; then
      SH_LD="\$(CXX)"
      LDFLAGS="-Wl,-rpath -Wl,\$(LIBDIR)"
      SH_LDFLAGS="-elf -shared \
        -Wl,-update_registry -Wl,\$(LIBDIR)/so_locations \
        -Wl,-rdata_shared \
        -Wl,-rpath -Wl,\$(LIBDIR) \
        -Wl,-soname -Wl,\$(TARGET_TO_MAKE).so.\$(ELF_MAJOR)"
    else
      LDFLAGS="-rpath \$(LIBDIR)"
      SH_LDFLAGS="-elf -shared -rdata_shared -rpath \$(LIBDIR) \
                   -update_registry \$(LIBDIR)/so_locations \
                   -soname \$(TARGET_TO_MAKE).so.\$(ELF_MAJOR)"
    fi
  ;;
  *-linux)
    ELF=yes
    SH_LD="\$(CXX)"
    SH_LDFLAGS="-shared -Wl,-soname -Wl,\$(TARGET_TO_MAKE).so.\$(ELF_MAJOR)"
    LDFLAGS="-Wl,-rpath -Wl,\$(LIBDIR)"
  ;;
esac
changequote([, ])dnl

if test X$SHARED_LIBS = Xno; then
  ELF=no
fi

if test X$ELF = Xyes; then
  if test X$GCC = Xyes; then
    COPTIONS_MISC="$COPTIONS_MISC -fPIC"
  else
    COPTIONS_MISC="$COPTIONS_MISC -KPIC"
  fi
  if test X$GXX = Xyes; then
    CXXOPTIONS_MISC="$CXXOPTIONS_MISC -fPIC"
  else
    CXXOPTIONS_MISC="$CXXOPTIONS_MISC -KPIC"
  fi
fi

dnl -- special optimization options --

case $target in
  mips*-sgi-irix5*)
    if test X$GCC != Xyes; then
      COPTIONS_OPT="-O -Olimit 2000"
    fi
  ;;
  mips4-sgi-irix* | r8000-sgi-irix*)
    if test X$GCC != Xyes; then
      COPTIONS_OPT="-O2 \
        -OPT:const_copy_limit=20000:fold_arith_limit=20000:global_limit=20000"
    fi
    if test X$GXX != Xyes; then
      CXXOPTIONS_OPT="-O2 \
        -OPT:const_copy_limit=20000:fold_arith_limit=20000:global_limit=20000"
      AC_DEFINE(NO_VIRTUAL_BASES)
    fi
  ;;
changequote(<<, >>)dnl
  i[56]86-*)
    if test X$GCC = Xyes; then
      COPTIONS_OPT="-O2 -malign-loops=2 -malign-jumps=2 -malign-functions=2"
    fi
    if test X$GXX = Xyes; then
      CXXOPTIONS_OPT="-O2 -malign-loops=2 -malign-jumps=2 -malign-functions=2"
    fi
  ;;
changequote([, ])dnl
esac

dnl -- special architecture options --

AC_MSG_CHECKING([for special architecture options])
case $target in
  mips-*)
    COPTIONS_MISC="$COPTIONS_MISC -mips2"
    CXXOPTIONS_MISC="$CXXOPTIONS_MISC -mips2"
    AC_MSG_RESULT(mips)
  ;;
changequote(<<, >>)dnl
  mips[123]-*)
changequote([, ])dnl
    COPTIONS_MISC="$COPTIONS_MISC -$target_cpu"
    CXXOPTIONS_MISC="$CXXOPTIONS_MISC -$target_cpu"
    AC_MSG_RESULT($target_cpu)
  ;;
  mips4-*)
    if test X$GCC = Xyes; then
      COPTIONS_MISC="$COPTIONS_MISC -mips4"
      CXXOPTIONS_MISC="$CXXOPTIONS_MISC -mips4"
    else
      COPTIONS_MISC="$COPTIONS_MISC -64 -mips4"
      CXXOPTIONS_MISC="$CXXOPTIONS_MISC -64 -mips4"
      CXX="\$(SRCTOPDIR)/bin/CCfix"
    fi
    AC_MSG_RESULT(mips4)
  ;;
  r8000-*)
    if test X$GCC = Xyes; then
      COPTIONS_MISC="$COPTIONS_MISC -mips4 -mcpu=r8000"
      CXXOPTIONS_MISC="$CXXOPTIONS_MISC -mips4 -mcpu=r8000"
    else
      COPTIONS_MISC="$COPTIONS_MISC -64 -mips4 -TARG:processor=r8000"
      CXXOPTIONS_MISC="$CXXOPTIONS_MISC -64 -mips4 -TARG:processor=r8000"
      CXX="\$(SRCTOPDIR)/bin/CCfix"
    fi
    AC_MSG_RESULT(r8000)
  ;;
changequote(<<, >>)dnl
  i[456]86-*)
changequote([, ])dnl
    if test X$GCC = Xyes; then
      COPTIONS_MISC="$COPTIONS_MISC -m486"
    fi
    if test X$GXX = Xyes; then
      CXXOPTIONS_MISC="$CXXOPTIONS_MISC -m486"
    fi
    AC_MSG_RESULT(intel)
  ;;
  *)
    AC_MSG_RESULT("none")
  ;;
esac

dnl -- other options --

if test X$GXX = Xyes; then
  CXXOPTIONS_MISC="$CXXOPTIONS_MISC -fno-implicit-templates"
else
  CPPFLAGS="$CPPFLAGS -I$srcdir/include/libg++-stub"
fi

if test $DEBUG = yes; then
  CFLAGS="$COPTIONS_DBG $COPTIONS_MISC"
  CXXFLAGS="$CXXOPTIONS_DBG $CXXOPTIONS_MISC"
  LDFLAGS="$LDFLAGS -g"
else
  CFLAGS="$COPTIONS_OPT $COPTIONS_MISC"
  CXXFLAGS="$CXXOPTIONS_OPT $CXXOPTIONS_MISC"
fi

AC_SUBST(EXTRAINCLUDE)

AC_SUBST(COPTIONS_OPT)
AC_SUBST(COPTIONS_DBG)
AC_SUBST(COPTIONS_MISC)
AC_SUBST(CXXOPTIONS_OPT)
AC_SUBST(CXXOPTIONS_DBG)
AC_SUBST(CXXOPTIONS_MISC)

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)

AC_SUBST(LDFLAGS)
AC_SUBST(ELF)
AC_SUBST(ELF_MAJOR)
AC_SUBST(ELF_MINOR)
AC_SUBST(SH_LD)
AC_SUBST(SH_LDFLAGS)

AC_SUBST(OBJSUF)
AC_SUBST(LIBSUF)

dnl -------- Checks for architecture specific features. --------
dnl (Doesn't work for cross compilation.)
dnl AC_CHECK_SIZEOF(void*)

dnl This version works on more machines without the need to run
dnl a test program.
AC_DEFUN(SC_C_BIGENDIAN,
[AC_CHECK_HEADERS(fp.h endian.h machine/endian.h sys/endian.h)
AC_CACHE_CHECK(whether byte ordering is bigendian, sc_cv_c_bigendian,
[sc_cv_c_bigendian=unknown
# See if sys/param.h defines the BYTE_ORDER macro.
AC_TRY_COMPILE([#include "confdefs.h"
#ifdef HAVE_FP_H
#include <fp.h>
#endif
#ifdef HAVE_ENDIAN_H
#include <endian.h>
#endif
#ifdef HAVE_MACHINE_ENDIAN_H
#include <machine/endian.h>
#endif
#ifdef HAVE_SYS_ENDIAN_H
#include <sys/endian.h>
#endif
#include <sys/types.h>
#include <sys/param.h>], [
#if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN
 bogus endian macros
#endif], [# It does; now see whether it defined to BIG_ENDIAN or not.
AC_TRY_COMPILE([#include "confdefs.h"
#ifdef HAVE_FP_H
#include <fp.h>
#endif
#ifdef HAVE_MP_H
#include <mp.h>
#endif
#include <sys/types.h>
#include <sys/param.h>], [
#if BYTE_ORDER != BIG_ENDIAN
 not big endian
#endif], sc_cv_c_bigendian=yes, sc_cv_c_bigendian=no)])
if test $sc_cv_c_bigendian = unknown; then
AC_TRY_RUN([main () {
  /* Are we little or big endian?  From Harbison&Steele.  */
  union
  {
    long l;
    char c[sizeof (long)];
  } u;
  u.l = 1;
  exit (u.c[sizeof (long) - 1] == 1);
}], sc_cv_c_bigendian=no, sc_cv_c_bigendian=yes,
AC_MSG_ERROR([Could not determine endianness and cross compiling])
)
fi])
if test $sc_cv_c_bigendian = yes; then
  AC_DEFINE(WORDS_BIGENDIAN)
fi
])

SC_C_BIGENDIAN

dnl --------- Checks for libraries. ---------
AC_CHECK_LIB(dl,main)
AC_CHECK_LIB(sun,main)
AC_CHECK_LIB(m,main)
AC_CHECK_LIB(fl,main)

AC_CHECK_LIB(mpi,main)
AC_CHECK_LIB(mpl,main)
AC_CHECK_LIB(pvm,main)

AC_CHECK_LIB(nx,hrecv)
if test X$ac_cv_lib_nx_hrecv = Xyes; then
  HAVE_HRECV=yes
  HAVE_LIBNX=yes
  AC_DEFINE(HAVE_HRECV)
else
  AC_CHECK_LIB(nx,main)
  if test X$ac_cv_lib_nx_main = Xyes; then
    HAVE_LIBNX=yes
  fi
fi
AC_SUBST(HAVE_HRECV)

dnl ---------- Checks for header files. -----------

AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h sys/ioctl.h sys/time.h syslog.h unistd.h)
AC_CHECK_HEADERS(termios.h sys/stat.h sys/types.h dlfcn.h)
AC_CHECK_HEADERS(cube.h nx.h mpi.h mpl.h pvm.h)

dnl ---------- Make sure we got everything needed. -----------

if test X$ac_cv_lib_mpi_main = Xyes -a X$ac_cv_header_mpi_h = Xyes; then
  HAVE_MPI=yes
  AC_DEFINE(HAVE_MPI)
fi
AC_SUBST(HAVE_MPI)

if test X$ac_cv_lib_mpl_main = Xyes -a X$ac_cv_header_mpl_h = Xyes; then
  HAVE_MPL=yes
  AC_DEFINE(HAVE_MPL)
fi
AC_SUBST(HAVE_MPL)

if test X$ac_cv_lib_pvm_main = Xyes -a X$ac_cv_header_pvm_h = Xyes; then
  HAVE_PVM=yes
  AC_DEFINE(HAVE_PVM)
fi
AC_SUBST(HAVE_PVM)

if test X$ac_cv_header_nx_h = Xyes; then
  HAVE_NX=yes
  AC_DEFINE(HAVE_NX)
fi
AC_SUBST(HAVE_NX)

dnl -- Checks for typedefs, structures, and compiler characteristics. --
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_STRUCT_TM

dnl --------- Checks for library functions. ---------
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_FUNC_WAIT3
AC_CHECK_FUNCS(strerror sigfillset)

dnl --------- Check for signal handler argument lists. ---------

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_MSG_CHECKING([signal handler arguments])
AC_TRY_LINK([
#include <signal.h>
],[
  extern void (*signal (int sig, void (*func)(...)))(...);
],
SIGHASELLIP=yes,
SIGHASELLLIP=no)
AC_MSG_RESULT($SIGHASELLIP)
AC_DEFINE_UNQUOTED(SIGHASELLIP,$SIGHASELLIP)
AC_LANG_RESTORE

dnl --------- Checks for SYSV IPC. ---------

AC_CHECK_FUNCS(shmget semget)
AC_CHECK_HEADERS(sys/ipc.h sys/sem.h sys/shm.h)
AC_MSG_CHECKING([for SYSV IPC])
if test X$ac_cv_func_shmget = Xyes -a \
        X$ac_cv_func_semget = Xyes -a \
        X$ac_cv_header_sys_ipc_h = Xyes -a \
        X$ac_cv_header_sys_sem_h = Xyes -a \
        X$ac_cv_header_sys_shm_h = Xyes; then
  HAVE_SYSV_IPC=yes
  AC_DEFINE(HAVE_SYSV_IPC)
else
  HAVE_SYSV_IPC=no
fi
AC_MSG_RESULT($HAVE_SYSV_IPC)
AC_SUBST(HAVE_SYSV_IPC)

AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_MSG_CHECKING([if semctl requires semun])
AC_TRY_LINK([
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>
],[
  int val = 0;
  semctl(0,0,0,val);
],
AC_MSG_RESULT(no),
AC_DEFINE(SEMCTL_REQUIRES_SEMUN) AC_MSG_RESULT(yes))
AC_LANG_RESTORE

dnl --------- Create the stub Makefiles. ---------

$PERL $srcdir/bin/objectdir.pl $srcdir

AC_OUTPUT(lib/LocalMakefile)
