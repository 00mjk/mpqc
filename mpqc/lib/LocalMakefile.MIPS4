
ARCH = SGI

FC  = f2c
CC  = cc -64
GCC = cc -64
CXX = CCfix -64

RANLIB = @echo "skipping ranlib"

DEFINES += -DSGI -DNO_VIRTUAL_BASES

# this works for ointv2 and intv2 C code
#COPTIONS = -O2 -mips4 -TARG:processor=r8000 -OPT:const_copy_limit=20000:fold_arith_limit=20000:roundoff=2:IEEE_arithmetic=2
# this works for all the C code
COPTIONS = -O2 -mips4 -TARG:processor=r8000 -OPT:const_copy_limit=20000:fold_arith_limit=20000:global_limit=20000
COPTIONS_NOOPT =
COPTIONS_DEBUG = -g

# this works for all the C++ code
CXXOPTIONS = -O2 -mips4 -TARG:processor=r8000 -OPT:const_copy_limit=20000:fold_arith_limit=20000:global_limit=20000
CXXOPTIONS_NOOPT =
CXXOPTIONS_DEBUG = -g

# -acpp gets the ANSI cpp
ifeq ($(CC),cc)
  COPTIONS = -O -Olimit 2000 -acpp -D__STDC__=1 $(MORE_COPTIONS)
  COPTIONS_NOOPT = -acpp -D__STDC__=1 $(MORE_COPTIONS)
  COPTIONS_DEBUG = -g -acpp -D__STDC__=1 $(MORE_COPTIONS)
endif
ifeq ($(CC),gcc)
  COPTIONS = -O -fstrength-reduce -finline-functions -fdelayed-branch \
             $(MORE_COPTIONS)
  COPTIONS_NOOPT = $(MORE_COPTIONS)
  COPTIONS_DEBUG = -g $(MORE_COPTIONS)
endif
ifeq ($(CXX),g++)
  GXXOPTIONS =
  CXXOPTIONS = -O -fstrength-reduce -finline-functions -fdelayed-branch \
             $(GXXOPTIONS) $(MORE_COPTIONS)
  CXXOPTIONS_NOOPT = $(GXXOPTIONS) $(MORE_COPTIONS)
  CXXOPTIONS_DEBUG = -g $(GXXOPTIONS) $(MORE_COPTIONS)
  DEFINES += -DPRAGMA_IMPLEMENTATION_BUG -DTYPE_CONV_BUG
endif
ifeq ($(CXX),CC)
  CXXOPTIONS = -O -Olimit 2000 -I$(TOPDIR)/g++-include
endif

SYSLIBS = -lm -L/net/munin/usr/people/cljanss/MIPS4/lib -lfl -lg++-stub

ELF = yes

ifeq ($(ELF),yes)
LD = CC -64
SH_LD = ld

#LIBSUF = so
LIBSUF = a

SH_LDFLAGS = -elf -shared -rdata_shared -rpath $(LIBDIR) \
             -soname $(TARGET_TO_MAKE).so.$(ELF_MAJOR)
LDFLAGS += -Wl,-rpath -Wl,$(LIBDIR)

COPTIONS += -KPIC
COPTIONS_NOOPT += -KPIC
COPTIONS_DEBUG += -KPIC

CXXOPTIONS += -KPIC
CXXOPTIONS_NOOPT += -KPIC
CXXOPTIONS_DEBUG += -KPIC

CXXINCLUDE += -I/net/munin/usr/people/cljanss/lib/g++-stub
DEFINES += -DHAVE_SBRK_DEC

%.c++: %.cc
	ln -s $< $(@F)

%.d: %.c++
	$(CXX) -M -c $(CXXFLAGS) $< | sed 's/^$*.o/$*.o $*.d/g' > $(@F)

#%.$(OBJSUF): %.c++
#	$(CXX) $(CXXFLAGS) -c $< $(OUTPUT_OPTION)

#%.$(OBJSUF): %.cc
#	ln -s $< $@.c++
#	$(CXX) $(CXXFLAGS) -c $@.c++ $(OUTPUT_OPTION)

endif

