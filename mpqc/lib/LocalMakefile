
# The local makefile

#
# put any misc. variables here
#
COMPRESS = gzip
UNCOMPRESS = gunzip

#
# define your site
#
SITE = Sandia

#
# define your default architecture
#
ARCH=SGI
HOSTNAME = $(shell hostname)
ifeq ($(HOSTNAME),solaria)
  ARCH = SUN4
endif
ifeq ($(TARGETARCH),PARAGON)
  ARCH = PARAGON
endif

# 
# the host for remote makes
#
HOST=ncube

#
# any special definitions to pass to cpp
#
DEFINES =

#
# the usual
#
INCDIR = $(HOME)/include
BINDIR = $(HOME)/$(ARCH)/bin
LIBDIR = $(HOME)/$(ARCH)/lib
REMOTEDIR = $(HOME)/remote

# INCLUDE = -I$(INCDIR) -I/net/munin/usr/people/cljanss/include

#
# the path for library dependencies
#
vpath %.a $(LIBDIR):/net/munin/usr/people/cljanss/$(ARCH)/lib:/usr/lib:/lib:.

#
# does your compiler accept -c and -o on the same line?
#
C_MINUS_O = YES

#
# where's picl?
#

# This is for pvm
PICLLIB_PVM = $(LIBDIR)/piclhigh.$(LIBSUF) $(LIBDIR)/piclpvmnode.$(LIBSUF) \
          $(LIBDIR)/libpvm.$(LIBSUF)
# This is for the version 2.2 of mpsim.
PICLLIB_PICL = $(LIBDIR)/nodelib.$(LIBSUF) $(LIBDIR)/simlib.$(LIBSUF)
# To use the one node, one process simulator
PICLLIB_PROC = $(LIBDIR)/piclhigh.$(LIBSUF) $(LIBDIR)/piclproc.$(LIBSUF)
# To use the unix messages simulator
PICLLIB_MSG = $(LIBDIR)/piclhigh.$(LIBSUF) $(LIBDIR)/piclmsg.$(LIBSUF)
# To use the SGI shared memory
PICLLIB_SHM = $(LIBDIR)/piclhigh.$(LIBSUF) $(LIBDIR)/piclshmnode.$(LIBSUF)

#
# special system libraries to include
#
SYSLIBS =
OTHERLIBS =

#################################################################
#
# machine specific junk
#
#################################################################

ifeq ($(ARCH),I860)
  vpath %.a
  vpath %.a $(LIBDIR):/afs/alw.nih.gov/unix/src/parallel/ssd/i860/lib-coff:.

  C_MINUS_O = NO
  CC = icc
  FC = if77
  AR = ar860
  RANLIB = @echo
  DEFINES += -DI860
  COPTIONS = -O3 -Knoieee -Mnoframe -node
  COPTIONS_NOOPT = -node
  COPTIONS_DEBUG = -g -node
  SYSLIBS = -lm -lf -lX11

  ifneq ($(CC),igcc)
    INCLUDE += -I/usr/local/src/parallel/ssd/i860/include \
               -I/usr/local/src/parallel/ssd/i860/include-ipsc \
               -I/home/midway/I860/include
    OUTPUT_OPTION = ; mv $*.o $@
  else
    COPTIONS = -O2
    COPTIONS_NOOPT =
    COPTIONS_DEBUG = -g
  endif

endif

ifeq ($(ARCH),PARAGON)
  INSTALL=/bin/mv
  INSTALLBINOPT=
  INSTALLLIBOPT=

  CC = icc
  FC = if77
  AR = ar860
  RANLIB = echo
  DEFINES := $(DEFINES) -DPARAGON -DI860
  COPTIONS = -O3 -Knoieee -Mnoframe -nx
  COPTIONS_NOOPT = -node
  COPTIONS_DEBUG = -g -node
  SYSLIBS = -lm -lf
  PICLLIB = $(LIBDIR)/piclext.$(LIBSUF) $(LIBDIR)/piclhigh.$(LIBSUF) \
            $(LIBDIR)/piclparagon.$(LIBSUF)
endif

ifeq ($(ARCH),RS6000)
  # xlc is the ANSI C compiler
  CC = xlc
  FC = xlf
  DEFINES := $(DEFINES) -DAIXV3 -DAIX
  MALLOCLIB = $(LIBDIR)/malloctrace.$(LIBSUF)
  YACC = yacc
  LEX = lex
endif

ifeq ($(ARCH),SGI)
  INCDIR = /disk2/midway/SGI/include
  BINDIR = /disk2/midway/SGI/bin
  LIBDIR = /disk2/midway/SGI/lib
  REMOTEDIR = /disk2/midway/remote

  RANLIB = @echo "skipping ranlib"
  DEFINES += -DSGI

  # -acpp gets the ANSI cpp
  ifeq ($(CC),cc)
    COPTIONS = -O -Olimit 2000 -acpp -D__STDC__=1 $(MORE_COPTIONS)
    COPTIONS_NOOPT = -acpp -D__STDC__=1 $(MORE_COPTIONS)
    COPTIONS_DEBUG = -g -acpp -D__STDC__=1 $(MORE_COPTIONS)
    C_MINUS_O = NO
  endif

  FFLAGS_SAVE = -static
  MALLOCLIB = $(LIBDIR)/malloctrace.$(LIBSUF)
  SYSLIBS = -lm -lsun
endif

ifeq ($(ARCH),SUN4)
  DEFINES := $(DEFINES) -DSUN

  SYSLIBS = -lm
  OTHERLIBS = -L/usr/lang/SC1.0 -lF77 -lm

  PICLLIB = $(LIBDIR)/hostlib.$(LIBSUF) $(LL)/lib/libhost.$(LIBSUF)
  PICLLIB_PROC = $(LIBDIR)/piclext.$(LIBSUF) $(LIBDIR)/piclhigh.$(LIBSUF) \
                 $(LIBDIR)/piclproc.$(LIBSUF) $(LL)/lib/libhost.$(LIBSUF)
endif

ifeq ($(ARCH),L486)
  INCDIR = /usr/include
  BINDIR = /usr/bin
  LIBDIR = /usr/lib

  DEFINES += -DL486
  COPTIONS = -O6 -m486
  COPTIONS_NOOPT = -m486
  COPTIONS_DEBUG = -g -m486
  CXXOPTIONS = -O6 -m486
  CXXOPTIONS_NOOPT = -m486
  CXXOPTIONS_DEBUG = -g -m486

  SYSLIBS = -lm
  OTHERLIBS = -lf2c
endif

